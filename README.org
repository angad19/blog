#+TITLE: Angad's Blog

I need a way to generate my blog. I tried Jekyll and co. but none of them seemed to fit in with my workflow. I found Jekyll to be extremely overkill for the simple things I wanted to do. I don't know a lot of React, so all the React-based ones were off the table. I thought about using Metalsmith, but it was too barebones. There are a lot of Python based generators (Mike Zamansky runs his [[https://cestlaz.github.io][blog]] on [[https://github.com/getnikola/nikola][Nikola]]), but I suck at Python I don't seem to be getting better.

So I decided to roll my own. I didn't want it to be markdown based, since I prefer org-mode. And I couldn't find any good org-mode parsers written in JavaScript (I plan to write one when I get the time). Introducing ln, an extensible, JSON-based, blog framework written in JavaScript.

Ln also has a config file (=config.js=), the exports of the config file are also passed to plugins.

Ln is made up of three components - =posts.json=, where the posts are stored, =build.js= the script that builds static pages from =posts.json= and the =plugins= directory, which contains plugins which have access to =posts.json=. An ln plugin is just a function which takes =posts= as a parameter, modifies it, and returns a promise which resolves with an array of post objects. There are obviously other ways of dealing with =posts.json=, for example, you could write a script which reads all =.org= files in a directory, converts them to post objects and writes them to =posts.json=.

Here is an example post from =posts.json= -
#+BEGIN_SRC json
  {
    "title": "Post one",
    "date": "2018-06-07 00:42",
    "author": "Angad Singh",
    "content": "<h1>Hello, world!</h1>"
  }
#+END_SRC

I wrote some psuedocode for the build script.
#+BEGIN_SRC fundamental
  Delete public directory
  Create new public directory
  Move assets directory
  Read posts.json
  Run plugins
  Write posts.json
#+END_SRC

And that's it! I wanted ln to be dead simple and very extensible so that if I need to add something later, I wouldn't have to rewrite the whole thing.

* TODO
** ln CLI
